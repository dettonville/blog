[{"content":"If one has worked long enough with ansible, you might have gotten to the same frustation I have had.\nAnsible has many scopes to store a variable value allowing for its supreme flexibility for maintaining a hardware/virtual machine inventory.\nFor example, for a target host VM instance, one can set the variable state at the host level in the inventory.\nAnother possibility, is if the setting is not unique to the machine, and if there are a group of such machines (pet / cattle), then one can set the variable state at the respective group level.\nJust this support enables a large diversity of use cases where the scenario is one-to-many between group to machine.\nThen one has the an array of additional options to further overide a variable state other levels:\n- at the playbook level by setting the variable upon playbook execution - at runtime level, by setting the variable input file - at environment level, by using lookup(env, ) - etc, etc,...  For the challenge that occurs in realistic application environments, DEV, TEST, PROD, STAGE, etc, consider the following simplistic but realistic scenario:\nSay we have a stack of application components belonging to the same overall application and for a given host machine, that multiple application components are to be hosted/running on the machine, each with it own set of configuration parameters.\nMake the scenario more realistic by considering a stack of applications running on a docker machine.\nTake the following docker-compose example:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86  version: \u0026#39;3\u0026#39; services: web: image: ansible/awx:18. container_name: awx_web depends_on: - redis - postgres ports: - \u0026#34;80:8052\u0026#34; hostname: awxweb user: root restart: unless-stopped volumes: - supervisor-socket:/var/run/supervisor - rsyslog-socket:/var/run/awx-rsyslog/ - rsyslog-config:/var/lib/awx/rsyslog/ - \u0026#34;~/.awx/awxcompose/SECRET_KEY:/etc/tower/SECRET_KEY\u0026#34; - \u0026#34;~/.awx/awxcompose/environment.sh:/etc/tower/conf.d/environment.sh\u0026#34; - \u0026#34;~/.awx/awxcompose/credentials.py:/etc/tower/conf.d/credentials.py\u0026#34; - \u0026#34;~/.awx/awxcompose/nginx.conf:/etc/nginx/nginx.conf:ro\u0026#34; - \u0026#34;~/.awx/awxcompose/redis_socket:/var/run/redis/:rw\u0026#34; environment: http_proxy: https_proxy: no_proxy: task: image: ansible/awx:17.1.0 container_name: awx_task depends_on: - redis - web - postgres command: /usr/bin/launch_awx_task.sh hostname: awx user: root restart: unless-stopped volumes: - supervisor-socket:/var/run/supervisor - rsyslog-socket:/var/run/awx-rsyslog/ - rsyslog-config:/var/lib/awx/rsyslog/ - \u0026#34;~/.awx/awxcompose/SECRET_KEY:/etc/tower/SECRET_KEY\u0026#34; - \u0026#34;~/.awx/awxcompose/environment.sh:/etc/tower/conf.d/environment.sh\u0026#34; - \u0026#34;~/.awx/awxcompose/credentials.py:/etc/tower/conf.d/credentials.py\u0026#34; - \u0026#34;~/.awx/awxcompose/redis_socket:/var/run/redis/:rw\u0026#34; environment: AWX_SKIP_MIGRATIONS: \u0026#34;1\u0026#34; http_proxy: https_proxy: no_proxy: SUPERVISOR_WEB_CONFIG_PATH: \u0026#39;/etc/supervisord.conf\u0026#39; redis: image: redis container_name: awx_redis restart: unless-stopped environment: http_proxy: https_proxy: no_proxy: command: [\u0026#34;/usr/local/etc/redis/redis.conf\u0026#34;] volumes: - \u0026#34;~/.awx/awxcompose/redis.conf:/usr/local/etc/redis/redis.conf:ro\u0026#34; - \u0026#34;~/.awx/awxcompose/redis_socket:/var/run/redis/:rw\u0026#34; postgres: image: postgres:12 container_name: awx_postgres restart: unless-stopped volumes: - \u0026#34;~/.awx/pgdocker/12/data/:/var/lib/postgresql/data:Z\u0026#34; environment: POSTGRES_USER: awx POSTGRES_PASSWORD: pgpass POSTGRES_DB: awx http_proxy: https_proxy: no_proxy: volumes: supervisor-socket: rsyslog-socket: rsyslog-config:   ","date":"2022-03-05T00:00:00Z","permalink":"https://dettonville.github.io/p/ansible-limitations-with-respect-to-application-configuration-on-a-target-host-and-workarounds/","title":"Ansible Limitations with respect to Application Configuration on a target host and workarounds"}]